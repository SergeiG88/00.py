# # Старый стиль: % Аналог С - форматирвоания функции printf()
print('мы - те %s, что говорят "%s!"' %( 'рыцари', 'ха'))
# print('вывод числа %d' %34)
#
# # Более продвинутый способ - через метод строки .format()
# print('мы - те {}, что говорят "{}!"'.format( 'рыцари', 'ха'))

# Можно указывать номер выводимого параметра
# a = 'рыцари'
# b = 'ого'
# print('мы - те {0}, что говорят "{1}!"'.format( a, b))
# и менять местами
# print('мы - те {1}, что говорят "{0}!"'.format( a, b))

# # вывод целых чисел
# a = 27
# print('вывод числа {0}'.format(a))
# print('вывод числа {0:d}'.format(a))
# # сколько символов выводить - указываем после двоеточия
# print('вывод числа {0:3d}'.format(a))
# for x in range(1, 11):
#     print('{0:2d} {1:3d} {2:4d}'.format( x, x**2, x**3))

# вывод дробного числа с заданной точностью
# :8.4f - 8 знаков всего, 4 - знака после запятой, дробное число

# import math
# print('Вывод числа "{0:5f}"'.format(math.pi))
# print('Вывод числа "{0:5.2f}"'.format(math.pi))
# print('Вывод числа "{0:8.2f}"'.format(math.pi))

# именновыные аргументы
# print('Этот {food} - {adjective}.'.format(
#     food='фарш', adjective='непередаваемо ужасен'
# ))
# # можно совмещать
# print('история о {0}-e, {1}-e и {other}-e'.format( 'билл', 'манфред', other='георг'))

# новое форматирование
txt = 'строка'
print(f'{txt:*^30}')


